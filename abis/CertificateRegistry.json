{
contractName: "CertificateRegistry",
abi: [
{
anonymous: false,
inputs: [
{
indexed: true,
internalType: "address",
name: "from",
type: "address"
},
{
indexed: false,
internalType: "uint256",
name: "timeOfIssue",
type: "uint256"
},
{
indexed: false,
internalType: "bool",
name: "isStored",
type: "bool"
}
],
name: "LogNewHashStored",
type: "event"
},
{
anonymous: false,
inputs: [
{
indexed: true,
internalType: "address",
name: "oldOwner",
type: "address"
},
{
indexed: true,
internalType: "address",
name: "newOwner",
type: "address"
}
],
name: "OwnerSet",
type: "event"
},
{
anonymous: false,
inputs: [
{
indexed: true,
internalType: "address",
name: "previousOwner",
type: "address"
},
{
indexed: true,
internalType: "address",
name: "newOwner",
type: "address"
}
],
name: "OwnershipTransferred",
type: "event"
},
{
constant: true,
inputs: [ ],
name: "contractOwner",
outputs: [
{
internalType: "address",
name: "",
type: "address"
}
],
payable: false,
stateMutability: "view",
type: "function"
},
{
constant: true,
inputs: [
{
internalType: "bytes32",
name: "",
type: "bytes32"
}
],
name: "documentRegistry",
outputs: [
{
internalType: "address",
name: "issuer",
type: "address"
},
{
internalType: "uint256",
name: "timeOfIssue",
type: "uint256"
},
{
internalType: "bool",
name: "isStored",
type: "bool"
}
],
payable: false,
stateMutability: "view",
type: "function"
},
{
constant: true,
inputs: [ ],
name: "isOwner",
outputs: [
{
internalType: "bool",
name: "",
type: "bool"
}
],
payable: false,
stateMutability: "view",
type: "function"
},
{
constant: true,
inputs: [ ],
name: "isStudent",
outputs: [
{
internalType: "bool",
name: "",
type: "bool"
}
],
payable: false,
stateMutability: "view",
type: "function"
},
{
constant: true,
inputs: [ ],
name: "isVerifier",
outputs: [
{
internalType: "bool",
name: "",
type: "bool"
}
],
payable: false,
stateMutability: "view",
type: "function"
},
{
constant: true,
inputs: [ ],
name: "student",
outputs: [
{
internalType: "address",
name: "",
type: "address"
}
],
payable: false,
stateMutability: "view",
type: "function"
},
{
constant: false,
inputs: [
{
internalType: "address",
name: "newOwner",
type: "address"
}
],
name: "transferOwnership",
outputs: [ ],
payable: false,
stateMutability: "nonpayable",
type: "function"
},
{
constant: true,
inputs: [ ],
name: "value",
outputs: [
{
internalType: "uint256",
name: "",
type: "uint256"
}
],
payable: false,
stateMutability: "view",
type: "function"
},
{
constant: true,
inputs: [ ],
name: "verifier",
outputs: [
{
internalType: "address",
name: "",
type: "address"
}
],
payable: false,
stateMutability: "view",
type: "function"
},
{
constant: false,
inputs: [
{
internalType: "bytes32",
name: "_documentHash",
type: "bytes32"
}
],
name: "storeHash",
outputs: [ ],
payable: false,
stateMutability: "nonpayable",
type: "function"
},
{
constant: true,
inputs: [
{
internalType: "bytes32",
name: "_documenteHash",
type: "bytes32"
}
],
name: "verifyCertificate",
outputs: [
{
internalType: "bool",
name: "",
type: "bool"
}
],
payable: false,
stateMutability: "pure",
type: "function"
}
],
metadata: "{"compiler":{"version":"0.5.16+commit.9c3226ce"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"timeOfIssue","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isStored","type":"bool"}],"name":"LogNewHashStored","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"constant":true,"inputs":[],"name":"contractOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"documentRegistry","outputs":[{"internalType":"address","name":"issuer","type":"address"},{"internalType":"uint256","name":"timeOfIssue","type":"uint256"},{"internalType":"bool","name":"isStored","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isStudent","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isVerifier","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_documentHash","type":"bytes32"}],"name":"storeHash","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"student","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"value","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"verifier","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_documenteHash","type":"bytes32"}],"name":"verifyCertificate","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"pure","type":"function"}],"devdoc":{"methods":{}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/home/engrsunday/workspace/E-Cert-Dapp/contracts/CertificateRegistry.sol":"CertificateRegistry"},"evmVersion":"istanbul","libraries":{},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"/home/engrsunday/workspace/E-Cert-Dapp/contracts/CertificateRegistry.sol":{"keccak256":"0x7fa91974b833b6f866a53d01d3a2cfad95c38289e0db0d56d9c25e57857b2f45","urls":["bzz-raw://955fe3932653047e32be27548c72d7692f8d3c80b8b03525b1f955984a96034b","dweb:/ipfs/QmNrgtXaz5TrPY5M1EPMkqvpQB1gQs8yvwgybfeRuKe11S"]},"/home/engrsunday/workspace/E-Cert-Dapp/contracts/zeppelin/ownership/Ownable.sol":{"keccak256":"0xde9447f87ffb442ec99656c9e92660169d49eb7c3c06b49152e8c5841f348b7b","urls":["bzz-raw://b6fea1332f60d5a955b351e582dc8782ca271a6c60cb6c615e4fd726547b86ac","dweb:/ipfs/QmWpDSGHPZBa3oB3iCCiR3gTwqcWSX6RXSGKscTF52jVfv"]}},"version":1}",
bytecode: "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a3610ac8806100cf6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637fe88885116100715780637fe88885146101a4578063850c1768146101d25780638f32d59b14610218578063a437a40d1461023a578063ce606ee0146102ba578063f2fde38b14610304576100a9565b80632b7ac3f3146100ae5780633fa4f245146100f857806351e0a6eb14610116578063699450e8146101385780637efc818c14610182575b600080fd5b6100b6610348565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61010061036e565b6040518082815260200191505060405180910390f35b61011e610374565b604051808215151515815260200191505060405180910390f35b6101406103cc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61018a6103f2565b604051808215151515815260200191505060405180910390f35b6101d0600480360360208110156101ba57600080fd5b810190808035906020019092919050505061044a565b005b6101fe600480360360208110156101e857600080fd5b810190808035906020019092919050505061072f565b604051808215151515815260200191505060405180910390f35b610220610757565b604051808215151515815260200191505060405180910390f35b6102666004803603602081101561025057600080fd5b81019080803590602001909291905050506107ae565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390f35b6102c2610805565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103466004803603602081101561031a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061082a565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610452610757565b6104c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4163636573732044656e6965640000000000000000000000000000000000000081525060200191505060405180910390fd5b806000602060ff1611610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610a0a602c913960400191505060405180910390fd5b8161052c8161099c565b15610582576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180610a36603a913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610608576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610a706024913960400191505060405180910390fd5b6106106109d0565b60405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001600115158152509050806004600086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff167f77ce6f493ec8c515e47fd7a83a30370b8e5a973878bcd02456bbe359358de0cc42600160405180838152602001821515151581526020019250505060405180910390a250505050565b6000806000602060ff16119050801561074c576001915050610752565b60009150505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610832610757565b6108a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4163636573732044656e6965640000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108de57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600115156004600084815260200190815260200160002060020160009054906101000a900460ff161515149050919050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600015158152509056fe4572726f723a204572726f723a20686173682076616c75652073686f756c64206e6f7420626520656d7074794572726f723a204f6e6c792068617368657320746861742068617665206e6f74206265656e206861736865642063616e2062652073746f7265644572726f723a20656e73757265206564756361746f722061646472657373206578697374a265627a7a72315820f70c9a5596724379502b56df617256e6062f8b7f5d14959cf6cdc4d1e681fc4964736f6c63430005100032",
deployedBytecode: "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80637fe88885116100715780637fe88885146101a4578063850c1768146101d25780638f32d59b14610218578063a437a40d1461023a578063ce606ee0146102ba578063f2fde38b14610304576100a9565b80632b7ac3f3146100ae5780633fa4f245146100f857806351e0a6eb14610116578063699450e8146101385780637efc818c14610182575b600080fd5b6100b6610348565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61010061036e565b6040518082815260200191505060405180910390f35b61011e610374565b604051808215151515815260200191505060405180910390f35b6101406103cc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61018a6103f2565b604051808215151515815260200191505060405180910390f35b6101d0600480360360208110156101ba57600080fd5b810190808035906020019092919050505061044a565b005b6101fe600480360360208110156101e857600080fd5b810190808035906020019092919050505061072f565b604051808215151515815260200191505060405180910390f35b610220610757565b604051808215151515815260200191505060405180910390f35b6102666004803603602081101561025057600080fd5b81019080803590602001909291905050506107ae565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390f35b6102c2610805565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103466004803603602081101561031a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061082a565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610452610757565b6104c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4163636573732044656e6965640000000000000000000000000000000000000081525060200191505060405180910390fd5b806000602060ff1611610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610a0a602c913960400191505060405180910390fd5b8161052c8161099c565b15610582576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180610a36603a913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610608576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610a706024913960400191505060405180910390fd5b6106106109d0565b60405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001600115158152509050806004600086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff167f77ce6f493ec8c515e47fd7a83a30370b8e5a973878bcd02456bbe359358de0cc42600160405180838152602001821515151581526020019250505060405180910390a250505050565b6000806000602060ff16119050801561074c576001915050610752565b60009150505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610832610757565b6108a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4163636573732044656e6965640000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108de57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600115156004600084815260200190815260200160002060020160009054906101000a900460ff161515149050919050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600015158152509056fe4572726f723a204572726f723a20686173682076616c75652073686f756c64206e6f7420626520656d7074794572726f723a204f6e6c792068617368657320746861742068617665206e6f74206265656e206861736865642063616e2062652073746f7265644572726f723a20656e73757265206564756361746f722061646472657373206578697374a265627a7a72315820f70c9a5596724379502b56df617256e6062f8b7f5d14959cf6cdc4d1e681fc4964736f6c63430005100032",
sourceMap: "118:2588:0:-;;;756:10:2;740:13;;:26;;;;;;;;;;;;;;;;;;802:13;;;;;;;;;;;781:35;;798:1;781:35;;;;;;;;;;;;118:2588:0;;;;;;",
deployedSourceMap: "118:2588:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;118:2588:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;426:23:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;456:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1338:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;398:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1437:95;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1616:661:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1616:661:0;;;;;;;;;;;;;;;;;:::i;:::-;;2284:239;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2284:239:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1235:97:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;776:56:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;776:56:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;364:28:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1702:204;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1702:204:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;426:23;;;;;;;;;;;;;:::o;456:20::-;;;;:::o;1338:93::-;1380:4;1417:7;;;;;;;;;;;1403:21;;:10;:21;;;1396:28;;1338:93;:::o;398:22::-;;;;;;;;;;;;;:::o;1437:95::-;1480:4;1517:8;;;;;;;;;;;1503:22;;:10;:22;;;1496:29;;1437:95;:::o;1616:661:0:-;1076:9:2;:7;:9::i;:::-;1068:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1721:13:0;1303:1;1280:20;:24;;;1259:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1758:13;1060:27;1073:13;1060:12;:27::i;:::-;1059:28;1038:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1830:3;1808:26;;:10;:26;;;;1787:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1906:27;;:::i;:::-;1936:126;;;;;;;;1971:10;1936:126;;;;;;2008:15;1936:126;;;;2047:4;1936:126;;;;;1906:156;;2107:7;2073:16;:31;2090:13;2073:31;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2236:10;2219:51;;;2248:15;2265:4;2219:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;1181:1;1384;1113::2;1616:661:0;:::o;2284:239::-;2380:4;2400:10;2437:1;2413:21;:25;;;2400:38;;2452:5;2448:47;;;2480:4;2473:11;;;;;2448:47;2511:5;2504:12;;;2284:239;;;;:::o;1235:97:2:-;1275:4;1312:13;;;;;;;;;;;1298:27;;:10;:27;;;1291:34;;1235:97;:::o;776:56:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;364:28:2:-;;;;;;;;;;;;;:::o;1702:204::-;1076:9;:7;:9::i;:::-;1068:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:1;1782:22;;:8;:22;;;;1774:31;;;;;;1856:8;1820:45;;1841:13;;;;;;;;;;;1820:45;;;;;;;;;;;;1891:8;1875:13;;:24;;;;;;;;;;;;;;;;;;1702:204;:::o;2529:174:0:-;2621:4;2692;2648:48;;:16;:31;2665:13;2648:31;;;;;;;;;;;:40;;;;;;;;;;;;:48;;;2641:55;;2529:174;;;:::o;118:2588::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
source: "// SPDX-License-Identifier: Apache-2.0 pragma solidity >=0.4.22 <0.8.0; import "./zeppelin/ownership/Ownable.sol"; contract CertificateRegistry is Ownable { /** * The Certificate Document info structure: every certificate info is composed of: * - documentHash: Hash of the document generated off-chain * - from: account of the institution that issue the document * - isStored - a flag to show that a hash is stored or not. */ struct DocumentInfo { address issuer; uint256 timeOfIssue; bool isStored; } /* A mapping of the document hash to the documentinfo that was issued This mapping is used to keep track of every certification document initiated for every student by an educator. */ mapping(bytes32 => DocumentInfo) public documentRegistry; // event for EVM logging event LogNewHashStored( address indexed from, uint timeOfIssue, bool isStored ); modifier onlyNotHashed(bytes32 _documentHash) { require( !isHashStored(_documentHash), "Error: Only hashes that have not been hashed can be stored" ); _; } modifier onlyHashValueNotEmpty(bytes32 _documentHash) { require( _documentHash.length > 0, "Error: Error: hash value should not be empty" ); _; } /* * Record a new hash request on behalf of a student * The sender of message call is the educator itself * @param {string} _documentHash: Hash of the sutuednt submitted for storage on-chain */ function storeHash(bytes32 _documentHash) public onlyOwner onlyHashValueNotEmpty(_documentHash) onlyNotHashed(_documentHash) { require( msg.sender != address(0x0), "Error: ensure educator address exist" ); DocumentInfo memory docInfo = DocumentInfo({ issuer: msg.sender, timeOfIssue: block.timestamp, isStored: true }); documentRegistry[_documentHash] = docInfo; // creates the event, to be used to query all the store hash of the certificates emit LogNewHashStored(msg.sender, block.timestamp, true); } function verifyCertificate(bytes32 _documenteHash) public pure returns (bool) { bool valid = _documenteHash.length > 0; if (valid) { return true; } return false; } function isHashStored(bytes32 _documentHash) internal view returns (bool) { return documentRegistry[_documentHash].isStored == true; } } ",
sourcePath: "/home/engrsunday/workspace/E-Cert-Dapp/contracts/CertificateRegistry.sol",
ast: {
absolutePath: "/home/engrsunday/workspace/E-Cert-Dapp/contracts/CertificateRegistry.sol",
exportedSymbols: {
CertificateRegistry: [
137
]
},
id: 138,
nodeType: "SourceUnit",
nodes: [
{
id: 1,
literals: [
"solidity",
">=",
"0.4",
".22",
"<",
"0.8",
".0"
],
nodeType: "PragmaDirective",
src: "40:32:0"
},
{
absolutePath: "/home/engrsunday/workspace/E-Cert-Dapp/contracts/zeppelin/ownership/Ownable.sol",
file: "./zeppelin/ownership/Ownable.sol",
id: 2,
nodeType: "ImportDirective",
scope: 138,
sourceUnit: 288,
src: "74:42:0",
symbolAliases: [ ],
unitAlias: ""
},
{
baseContracts: [
{
arguments: null,
baseName: {
contractScope: null,
id: 3,
name: "Ownable",
nodeType: "UserDefinedTypeName",
referencedDeclaration: 287,
src: "150:7:0",
typeDescriptions: {
typeIdentifier: "t_contract$_Ownable_$287",
typeString: "contract Ownable"
}
},
id: 4,
nodeType: "InheritanceSpecifier",
src: "150:7:0"
}
],
contractDependencies: [
287
],
contractKind: "contract",
documentation: null,
fullyImplemented: true,
id: 137,
linearizedBaseContracts: [
137,
287
],
name: "CertificateRegistry",
nodeType: "ContractDefinition",
nodes: [
{
canonicalName: "CertificateRegistry.DocumentInfo",
id: 11,
members: [
{
constant: false,
id: 6,
name: "issuer",
nodeType: "VariableDeclaration",
scope: 11,
src: "492:14:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_address",
typeString: "address"
},
typeName: {
id: 5,
name: "address",
nodeType: "ElementaryTypeName",
src: "492:7:0",
stateMutability: "nonpayable",
typeDescriptions: {
typeIdentifier: "t_address",
typeString: "address"
}
},
value: null,
visibility: "internal"
},
{
constant: false,
id: 8,
name: "timeOfIssue",
nodeType: "VariableDeclaration",
scope: 11,
src: "516:19:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_uint256",
typeString: "uint256"
},
typeName: {
id: 7,
name: "uint256",
nodeType: "ElementaryTypeName",
src: "516:7:0",
typeDescriptions: {
typeIdentifier: "t_uint256",
typeString: "uint256"
}
},
value: null,
visibility: "internal"
},
{
constant: false,
id: 10,
name: "isStored",
nodeType: "VariableDeclaration",
scope: 11,
src: "545:13:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
typeName: {
id: 9,
name: "bool",
nodeType: "ElementaryTypeName",
src: "545:4:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
value: null,
visibility: "internal"
}
],
name: "DocumentInfo",
nodeType: "StructDefinition",
scope: 137,
src: "462:103:0",
visibility: "public"
},
{
constant: false,
id: 15,
name: "documentRegistry",
nodeType: "VariableDeclaration",
scope: 137,
src: "776:56:0",
stateVariable: true,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_mapping$_t_bytes32_$_t_struct$_DocumentInfo_$11_storage_$",
typeString: "mapping(bytes32 => struct CertificateRegistry.DocumentInfo)"
},
typeName: {
id: 14,
keyType: {
id: 12,
name: "bytes32",
nodeType: "ElementaryTypeName",
src: "784:7:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
nodeType: "Mapping",
src: "776:32:0",
typeDescriptions: {
typeIdentifier: "t_mapping$_t_bytes32_$_t_struct$_DocumentInfo_$11_storage_$",
typeString: "mapping(bytes32 => struct CertificateRegistry.DocumentInfo)"
},
valueType: {
contractScope: null,
id: 13,
name: "DocumentInfo",
nodeType: "UserDefinedTypeName",
referencedDeclaration: 11,
src: "795:12:0",
typeDescriptions: {
typeIdentifier: "t_struct$_DocumentInfo_$11_storage_ptr",
typeString: "struct CertificateRegistry.DocumentInfo"
}
}
},
value: null,
visibility: "public"
},
{
anonymous: false,
documentation: null,
id: 23,
name: "LogNewHashStored",
nodeType: "EventDefinition",
parameters: {
id: 22,
nodeType: "ParameterList",
parameters: [
{
constant: false,
id: 17,
indexed: true,
name: "from",
nodeType: "VariableDeclaration",
scope: 23,
src: "900:20:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_address",
typeString: "address"
},
typeName: {
id: 16,
name: "address",
nodeType: "ElementaryTypeName",
src: "900:7:0",
stateMutability: "nonpayable",
typeDescriptions: {
typeIdentifier: "t_address",
typeString: "address"
}
},
value: null,
visibility: "internal"
},
{
constant: false,
id: 19,
indexed: false,
name: "timeOfIssue",
nodeType: "VariableDeclaration",
scope: 23,
src: "930:16:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_uint256",
typeString: "uint256"
},
typeName: {
id: 18,
name: "uint",
nodeType: "ElementaryTypeName",
src: "930:4:0",
typeDescriptions: {
typeIdentifier: "t_uint256",
typeString: "uint256"
}
},
value: null,
visibility: "internal"
},
{
constant: false,
id: 21,
indexed: false,
name: "isStored",
nodeType: "VariableDeclaration",
scope: 23,
src: "956:13:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
typeName: {
id: 20,
name: "bool",
nodeType: "ElementaryTypeName",
src: "956:4:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
value: null,
visibility: "internal"
}
],
src: "890:85:0"
},
src: "868:108:0"
},
{
body: {
id: 36,
nodeType: "Block",
src: "1028:161:0",
statements: [
{
expression: {
argumentTypes: null,
arguments: [
{
argumentTypes: null,
id: 31,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
nodeType: "UnaryOperation",
operator: "!",
prefix: true,
src: "1059:28:0",
subExpression: {
argumentTypes: null,
arguments: [
{
argumentTypes: null,
id: 29,
name: "_documentHash",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 25,
src: "1073:13:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
}
],
expression: {
argumentTypes: [
{
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
],
id: 28,
name: "isHashStored",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 136,
src: "1060:12:0",
typeDescriptions: {
typeIdentifier: "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
typeString: "function (bytes32) view returns (bool)"
}
},
id: 30,
isConstant: false,
isLValue: false,
isPure: false,
kind: "functionCall",
lValueRequested: false,
names: [ ],
nodeType: "FunctionCall",
src: "1060:27:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
{
argumentTypes: null,
hexValue: "4572726f723a204f6e6c792068617368657320746861742068617665206e6f74206265656e206861736865642063616e2062652073746f726564",
id: 32,
isConstant: false,
isLValue: false,
isPure: true,
kind: "string",
lValueRequested: false,
nodeType: "Literal",
src: "1101:60:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_stringliteral_2fa0893eeeff240a13e463b7e2bd77e95feccab78c12209765b9152b87a75200",
typeString: "literal_string "Error: Only hashes that have not been hashed can be stored""
},
value: "Error: Only hashes that have not been hashed can be stored"
}
],
expression: {
argumentTypes: [
{
typeIdentifier: "t_bool",
typeString: "bool"
},
{
typeIdentifier: "t_stringliteral_2fa0893eeeff240a13e463b7e2bd77e95feccab78c12209765b9152b87a75200",
typeString: "literal_string "Error: Only hashes that have not been hashed can be stored""
}
],
id: 27,
name: "require",
nodeType: "Identifier",
overloadedDeclarations: [
305,
306
],
referencedDeclaration: 306,
src: "1038:7:0",
typeDescriptions: {
typeIdentifier: "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
typeString: "function (bool,string memory) pure"
}
},
id: 33,
isConstant: false,
isLValue: false,
isPure: false,
kind: "functionCall",
lValueRequested: false,
names: [ ],
nodeType: "FunctionCall",
src: "1038:133:0",
typeDescriptions: {
typeIdentifier: "t_tuple$__$",
typeString: "tuple()"
}
},
id: 34,
nodeType: "ExpressionStatement",
src: "1038:133:0"
},
{
id: 35,
nodeType: "PlaceholderStatement",
src: "1181:1:0"
}
]
},
documentation: null,
id: 37,
name: "onlyNotHashed",
nodeType: "ModifierDefinition",
parameters: {
id: 26,
nodeType: "ParameterList",
parameters: [
{
constant: false,
id: 25,
name: "_documentHash",
nodeType: "VariableDeclaration",
scope: 37,
src: "1005:21:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
},
typeName: {
id: 24,
name: "bytes32",
nodeType: "ElementaryTypeName",
src: "1005:7:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
value: null,
visibility: "internal"
}
],
src: "1004:23:0"
},
src: "982:207:0",
visibility: "internal"
},
{
body: {
id: 50,
nodeType: "Block",
src: "1249:143:0",
statements: [
{
expression: {
argumentTypes: null,
arguments: [
{
argumentTypes: null,
commonType: {
typeIdentifier: "t_uint8",
typeString: "uint8"
},
id: 45,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
leftExpression: {
argumentTypes: null,
expression: {
argumentTypes: null,
id: 42,
name: "_documentHash",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 39,
src: "1280:13:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
id: 43,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
memberName: "length",
nodeType: "MemberAccess",
referencedDeclaration: null,
src: "1280:20:0",
typeDescriptions: {
typeIdentifier: "t_uint8",
typeString: "uint8"
}
},
nodeType: "BinaryOperation",
operator: ">",
rightExpression: {
argumentTypes: null,
hexValue: "30",
id: 44,
isConstant: false,
isLValue: false,
isPure: true,
kind: "number",
lValueRequested: false,
nodeType: "Literal",
src: "1303:1:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_rational_0_by_1",
typeString: "int_const 0"
},
value: "0"
},
src: "1280:24:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
{
argumentTypes: null,
hexValue: "4572726f723a204572726f723a20686173682076616c75652073686f756c64206e6f7420626520656d707479",
id: 46,
isConstant: false,
isLValue: false,
isPure: true,
kind: "string",
lValueRequested: false,
nodeType: "Literal",
src: "1318:46:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_stringliteral_1e091e5f2bd48e158be5924ffb956d6758c9f1d0fe5ef6ffd4bb48d5d30a01c4",
typeString: "literal_string "Error: Error: hash value should not be empty""
},
value: "Error: Error: hash value should not be empty"
}
],
expression: {
argumentTypes: [
{
typeIdentifier: "t_bool",
typeString: "bool"
},
{
typeIdentifier: "t_stringliteral_1e091e5f2bd48e158be5924ffb956d6758c9f1d0fe5ef6ffd4bb48d5d30a01c4",
typeString: "literal_string "Error: Error: hash value should not be empty""
}
],
id: 41,
name: "require",
nodeType: "Identifier",
overloadedDeclarations: [
305,
306
],
referencedDeclaration: 306,
src: "1259:7:0",
typeDescriptions: {
typeIdentifier: "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
typeString: "function (bool,string memory) pure"
}
},
id: 47,
isConstant: false,
isLValue: false,
isPure: false,
kind: "functionCall",
lValueRequested: false,
names: [ ],
nodeType: "FunctionCall",
src: "1259:115:0",
typeDescriptions: {
typeIdentifier: "t_tuple$__$",
typeString: "tuple()"
}
},
id: 48,
nodeType: "ExpressionStatement",
src: "1259:115:0"
},
{
id: 49,
nodeType: "PlaceholderStatement",
src: "1384:1:0"
}
]
},
documentation: null,
id: 51,
name: "onlyHashValueNotEmpty",
nodeType: "ModifierDefinition",
parameters: {
id: 40,
nodeType: "ParameterList",
parameters: [
{
constant: false,
id: 39,
name: "_documentHash",
nodeType: "VariableDeclaration",
scope: 51,
src: "1226:21:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
},
typeName: {
id: 38,
name: "bytes32",
nodeType: "ElementaryTypeName",
src: "1226:7:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
value: null,
visibility: "internal"
}
],
src: "1225:23:0"
},
src: "1195:197:0",
visibility: "internal"
},
{
body: {
id: 98,
nodeType: "Block",
src: "1777:500:0",
statements: [
{
expression: {
argumentTypes: null,
arguments: [
{
argumentTypes: null,
commonType: {
typeIdentifier: "t_address_payable",
typeString: "address payable"
},
id: 70,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
leftExpression: {
argumentTypes: null,
expression: {
argumentTypes: null,
id: 65,
name: "msg",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 302,
src: "1808:3:0",
typeDescriptions: {
typeIdentifier: "t_magic_message",
typeString: "msg"
}
},
id: 66,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
memberName: "sender",
nodeType: "MemberAccess",
referencedDeclaration: null,
src: "1808:10:0",
typeDescriptions: {
typeIdentifier: "t_address_payable",
typeString: "address payable"
}
},
nodeType: "BinaryOperation",
operator: "!=",
rightExpression: {
argumentTypes: null,
arguments: [
{
argumentTypes: null,
hexValue: "307830",
id: 68,
isConstant: false,
isLValue: false,
isPure: true,
kind: "number",
lValueRequested: false,
nodeType: "Literal",
src: "1830:3:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_rational_0_by_1",
typeString: "int_const 0"
},
value: "0x0"
}
],
expression: {
argumentTypes: [
{
typeIdentifier: "t_rational_0_by_1",
typeString: "int_const 0"
}
],
id: 67,
isConstant: false,
isLValue: false,
isPure: true,
lValueRequested: false,
nodeType: "ElementaryTypeNameExpression",
src: "1822:7:0",
typeDescriptions: {
typeIdentifier: "t_type$_t_address_$",
typeString: "type(address)"
},
typeName: "address"
},
id: 69,
isConstant: false,
isLValue: false,
isPure: true,
kind: "typeConversion",
lValueRequested: false,
names: [ ],
nodeType: "FunctionCall",
src: "1822:12:0",
typeDescriptions: {
typeIdentifier: "t_address_payable",
typeString: "address payable"
}
},
src: "1808:26:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
{
argumentTypes: null,
hexValue: "4572726f723a20656e73757265206564756361746f722061646472657373206578697374",
id: 71,
isConstant: false,
isLValue: false,
isPure: true,
kind: "string",
lValueRequested: false,
nodeType: "Literal",
src: "1848:38:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_stringliteral_a09720bdcf207a60f01eceb97a7f2f206fcb22bdcd56a7b06fd6bc8ddfa8d0fe",
typeString: "literal_string "Error: ensure educator address exist""
},
value: "Error: ensure educator address exist"
}
],
expression: {
argumentTypes: [
{
typeIdentifier: "t_bool",
typeString: "bool"
},
{
typeIdentifier: "t_stringliteral_a09720bdcf207a60f01eceb97a7f2f206fcb22bdcd56a7b06fd6bc8ddfa8d0fe",
typeString: "literal_string "Error: ensure educator address exist""
}
],
id: 64,
name: "require",
nodeType: "Identifier",
overloadedDeclarations: [
305,
306
],
referencedDeclaration: 306,
src: "1787:7:0",
typeDescriptions: {
typeIdentifier: "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
typeString: "function (bool,string memory) pure"
}
},
id: 72,
isConstant: false,
isLValue: false,
isPure: false,
kind: "functionCall",
lValueRequested: false,
names: [ ],
nodeType: "FunctionCall",
src: "1787:109:0",
typeDescriptions: {
typeIdentifier: "t_tuple$__$",
typeString: "tuple()"
}
},
id: 73,
nodeType: "ExpressionStatement",
src: "1787:109:0"
},
{
assignments: [
75
],
declarations: [
{
constant: false,
id: 75,
name: "docInfo",
nodeType: "VariableDeclaration",
scope: 98,
src: "1906:27:0",
stateVariable: false,
storageLocation: "memory",
typeDescriptions: {
typeIdentifier: "t_struct$_DocumentInfo_$11_memory_ptr",
typeString: "struct CertificateRegistry.DocumentInfo"
},
typeName: {
contractScope: null,
id: 74,
name: "DocumentInfo",
nodeType: "UserDefinedTypeName",
referencedDeclaration: 11,
src: "1906:12:0",
typeDescriptions: {
typeIdentifier: "t_struct$_DocumentInfo_$11_storage_ptr",
typeString: "struct CertificateRegistry.DocumentInfo"
}
},
value: null,
visibility: "internal"
}
],
id: 83,
initialValue: {
argumentTypes: null,
arguments: [
{
argumentTypes: null,
expression: {
argumentTypes: null,
id: 77,
name: "msg",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 302,
src: "1971:3:0",
typeDescriptions: {
typeIdentifier: "t_magic_message",
typeString: "msg"
}
},
id: 78,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
memberName: "sender",
nodeType: "MemberAccess",
referencedDeclaration: null,
src: "1971:10:0",
typeDescriptions: {
typeIdentifier: "t_address_payable",
typeString: "address payable"
}
},
{
argumentTypes: null,
expression: {
argumentTypes: null,
id: 79,
name: "block",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 292,
src: "2008:5:0",
typeDescriptions: {
typeIdentifier: "t_magic_block",
typeString: "block"
}
},
id: 80,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
memberName: "timestamp",
nodeType: "MemberAccess",
referencedDeclaration: null,
src: "2008:15:0",
typeDescriptions: {
typeIdentifier: "t_uint256",
typeString: "uint256"
}
},
{
argumentTypes: null,
hexValue: "74727565",
id: 81,
isConstant: false,
isLValue: false,
isPure: true,
kind: "bool",
lValueRequested: false,
nodeType: "Literal",
src: "2047:4:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
value: "true"
}
],
expression: {
argumentTypes: [
{
typeIdentifier: "t_address_payable",
typeString: "address payable"
},
{
typeIdentifier: "t_uint256",
typeString: "uint256"
},
{
typeIdentifier: "t_bool",
typeString: "bool"
}
],
id: 76,
name: "DocumentInfo",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 11,
src: "1936:12:0",
typeDescriptions: {
typeIdentifier: "t_type$_t_struct$_DocumentInfo_$11_storage_ptr_$",
typeString: "type(struct CertificateRegistry.DocumentInfo storage pointer)"
}
},
id: 82,
isConstant: false,
isLValue: false,
isPure: false,
kind: "structConstructorCall",
lValueRequested: false,
names: [
"issuer",
"timeOfIssue",
"isStored"
],
nodeType: "FunctionCall",
src: "1936:126:0",
typeDescriptions: {
typeIdentifier: "t_struct$_DocumentInfo_$11_memory",
typeString: "struct CertificateRegistry.DocumentInfo memory"
}
},
nodeType: "VariableDeclarationStatement",
src: "1906:156:0"
},
{
expression: {
argumentTypes: null,
id: 88,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
leftHandSide: {
argumentTypes: null,
baseExpression: {
argumentTypes: null,
id: 84,
name: "documentRegistry",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 15,
src: "2073:16:0",
typeDescriptions: {
typeIdentifier: "t_mapping$_t_bytes32_$_t_struct$_DocumentInfo_$11_storage_$",
typeString: "mapping(bytes32 => struct CertificateRegistry.DocumentInfo storage ref)"
}
},
id: 86,
indexExpression: {
argumentTypes: null,
id: 85,
name: "_documentHash",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 53,
src: "2090:13:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
isConstant: false,
isLValue: true,
isPure: false,
lValueRequested: true,
nodeType: "IndexAccess",
src: "2073:31:0",
typeDescriptions: {
typeIdentifier: "t_struct$_DocumentInfo_$11_storage",
typeString: "struct CertificateRegistry.DocumentInfo storage ref"
}
},
nodeType: "Assignment",
operator: "=",
rightHandSide: {
argumentTypes: null,
id: 87,
name: "docInfo",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 75,
src: "2107:7:0",
typeDescriptions: {
typeIdentifier: "t_struct$_DocumentInfo_$11_memory_ptr",
typeString: "struct CertificateRegistry.DocumentInfo memory"
}
},
src: "2073:41:0",
typeDescriptions: {
typeIdentifier: "t_struct$_DocumentInfo_$11_storage",
typeString: "struct CertificateRegistry.DocumentInfo storage ref"
}
},
id: 89,
nodeType: "ExpressionStatement",
src: "2073:41:0"
},
{
eventCall: {
argumentTypes: null,
arguments: [
{
argumentTypes: null,
expression: {
argumentTypes: null,
id: 91,
name: "msg",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 302,
src: "2236:3:0",
typeDescriptions: {
typeIdentifier: "t_magic_message",
typeString: "msg"
}
},
id: 92,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
memberName: "sender",
nodeType: "MemberAccess",
referencedDeclaration: null,
src: "2236:10:0",
typeDescriptions: {
typeIdentifier: "t_address_payable",
typeString: "address payable"
}
},
{
argumentTypes: null,
expression: {
argumentTypes: null,
id: 93,
name: "block",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 292,
src: "2248:5:0",
typeDescriptions: {
typeIdentifier: "t_magic_block",
typeString: "block"
}
},
id: 94,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
memberName: "timestamp",
nodeType: "MemberAccess",
referencedDeclaration: null,
src: "2248:15:0",
typeDescriptions: {
typeIdentifier: "t_uint256",
typeString: "uint256"
}
},
{
argumentTypes: null,
hexValue: "74727565",
id: 95,
isConstant: false,
isLValue: false,
isPure: true,
kind: "bool",
lValueRequested: false,
nodeType: "Literal",
src: "2265:4:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
value: "true"
}
],
expression: {
argumentTypes: [
{
typeIdentifier: "t_address_payable",
typeString: "address payable"
},
{
typeIdentifier: "t_uint256",
typeString: "uint256"
},
{
typeIdentifier: "t_bool",
typeString: "bool"
}
],
id: 90,
name: "LogNewHashStored",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 23,
src: "2219:16:0",
typeDescriptions: {
typeIdentifier: "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
typeString: "function (address,uint256,bool)"
}
},
id: 96,
isConstant: false,
isLValue: false,
isPure: false,
kind: "functionCall",
lValueRequested: false,
names: [ ],
nodeType: "FunctionCall",
src: "2219:51:0",
typeDescriptions: {
typeIdentifier: "t_tuple$__$",
typeString: "tuple()"
}
},
id: 97,
nodeType: "EmitStatement",
src: "2214:56:0"
}
]
},
documentation: null,
id: 99,
implemented: true,
kind: "function",
modifiers: [
{
arguments: null,
id: 56,
modifierName: {
argumentTypes: null,
id: 55,
name: "onlyOwner",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 218,
src: "1681:9:0",
typeDescriptions: {
typeIdentifier: "t_modifier$__$",
typeString: "modifier ()"
}
},
nodeType: "ModifierInvocation",
src: "1681:9:0"
},
{
arguments: [
{
argumentTypes: null,
id: 58,
name: "_documentHash",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 53,
src: "1721:13:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
}
],
id: 59,
modifierName: {
argumentTypes: null,
id: 57,
name: "onlyHashValueNotEmpty",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 51,
src: "1699:21:0",
typeDescriptions: {
typeIdentifier: "t_modifier$_t_bytes32_$",
typeString: "modifier (bytes32)"
}
},
nodeType: "ModifierInvocation",
src: "1699:36:0"
},
{
arguments: [
{
argumentTypes: null,
id: 61,
name: "_documentHash",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 53,
src: "1758:13:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
}
],
id: 62,
modifierName: {
argumentTypes: null,
id: 60,
name: "onlyNotHashed",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 37,
src: "1744:13:0",
typeDescriptions: {
typeIdentifier: "t_modifier$_t_bytes32_$",
typeString: "modifier (bytes32)"
}
},
nodeType: "ModifierInvocation",
src: "1744:28:0"
}
],
name: "storeHash",
nodeType: "FunctionDefinition",
parameters: {
id: 54,
nodeType: "ParameterList",
parameters: [
{
constant: false,
id: 53,
name: "_documentHash",
nodeType: "VariableDeclaration",
scope: 99,
src: "1635:21:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
},
typeName: {
id: 52,
name: "bytes32",
nodeType: "ElementaryTypeName",
src: "1635:7:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
value: null,
visibility: "internal"
}
],
src: "1634:23:0"
},
returnParameters: {
id: 63,
nodeType: "ParameterList",
parameters: [ ],
src: "1777:0:0"
},
scope: 137,
src: "1616:661:0",
stateMutability: "nonpayable",
superFunction: null,
visibility: "public"
},
{
body: {
id: 120,
nodeType: "Block",
src: "2390:133:0",
statements: [
{
assignments: [
107
],
declarations: [
{
constant: false,
id: 107,
name: "valid",
nodeType: "VariableDeclaration",
scope: 120,
src: "2400:10:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
typeName: {
id: 106,
name: "bool",
nodeType: "ElementaryTypeName",
src: "2400:4:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
value: null,
visibility: "internal"
}
],
id: 112,
initialValue: {
argumentTypes: null,
commonType: {
typeIdentifier: "t_uint8",
typeString: "uint8"
},
id: 111,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
leftExpression: {
argumentTypes: null,
expression: {
argumentTypes: null,
id: 108,
name: "_documenteHash",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 101,
src: "2413:14:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
id: 109,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
memberName: "length",
nodeType: "MemberAccess",
referencedDeclaration: null,
src: "2413:21:0",
typeDescriptions: {
typeIdentifier: "t_uint8",
typeString: "uint8"
}
},
nodeType: "BinaryOperation",
operator: ">",
rightExpression: {
argumentTypes: null,
hexValue: "30",
id: 110,
isConstant: false,
isLValue: false,
isPure: true,
kind: "number",
lValueRequested: false,
nodeType: "Literal",
src: "2437:1:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_rational_0_by_1",
typeString: "int_const 0"
},
value: "0"
},
src: "2413:25:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
nodeType: "VariableDeclarationStatement",
src: "2400:38:0"
},
{
condition: {
argumentTypes: null,
id: 113,
name: "valid",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 107,
src: "2452:5:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
falseBody: null,
id: 117,
nodeType: "IfStatement",
src: "2448:47:0",
trueBody: {
id: 116,
nodeType: "Block",
src: "2459:36:0",
statements: [
{
expression: {
argumentTypes: null,
hexValue: "74727565",
id: 114,
isConstant: false,
isLValue: false,
isPure: true,
kind: "bool",
lValueRequested: false,
nodeType: "Literal",
src: "2480:4:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
value: "true"
},
functionReturnParameters: 105,
id: 115,
nodeType: "Return",
src: "2473:11:0"
}
]
}
},
{
expression: {
argumentTypes: null,
hexValue: "66616c7365",
id: 118,
isConstant: false,
isLValue: false,
isPure: true,
kind: "bool",
lValueRequested: false,
nodeType: "Literal",
src: "2511:5:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
value: "false"
},
functionReturnParameters: 105,
id: 119,
nodeType: "Return",
src: "2504:12:0"
}
]
},
documentation: null,
id: 121,
implemented: true,
kind: "function",
modifiers: [ ],
name: "verifyCertificate",
nodeType: "FunctionDefinition",
parameters: {
id: 102,
nodeType: "ParameterList",
parameters: [
{
constant: false,
id: 101,
name: "_documenteHash",
nodeType: "VariableDeclaration",
scope: 121,
src: "2311:22:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
},
typeName: {
id: 100,
name: "bytes32",
nodeType: "ElementaryTypeName",
src: "2311:7:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
value: null,
visibility: "internal"
}
],
src: "2310:24:0"
},
returnParameters: {
id: 105,
nodeType: "ParameterList",
parameters: [
{
constant: false,
id: 104,
name: "",
nodeType: "VariableDeclaration",
scope: 121,
src: "2380:4:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
typeName: {
id: 103,
name: "bool",
nodeType: "ElementaryTypeName",
src: "2380:4:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
value: null,
visibility: "internal"
}
],
src: "2379:6:0"
},
scope: 137,
src: "2284:239:0",
stateMutability: "pure",
superFunction: null,
visibility: "public"
},
{
body: {
id: 135,
nodeType: "Block",
src: "2631:72:0",
statements: [
{
expression: {
argumentTypes: null,
commonType: {
typeIdentifier: "t_bool",
typeString: "bool"
},
id: 133,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
leftExpression: {
argumentTypes: null,
expression: {
argumentTypes: null,
baseExpression: {
argumentTypes: null,
id: 128,
name: "documentRegistry",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 15,
src: "2648:16:0",
typeDescriptions: {
typeIdentifier: "t_mapping$_t_bytes32_$_t_struct$_DocumentInfo_$11_storage_$",
typeString: "mapping(bytes32 => struct CertificateRegistry.DocumentInfo storage ref)"
}
},
id: 130,
indexExpression: {
argumentTypes: null,
id: 129,
name: "_documentHash",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 123,
src: "2665:13:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
isConstant: false,
isLValue: true,
isPure: false,
lValueRequested: false,
nodeType: "IndexAccess",
src: "2648:31:0",
typeDescriptions: {
typeIdentifier: "t_struct$_DocumentInfo_$11_storage",
typeString: "struct CertificateRegistry.DocumentInfo storage ref"
}
},
id: 131,
isConstant: false,
isLValue: true,
isPure: false,
lValueRequested: false,
memberName: "isStored",
nodeType: "MemberAccess",
referencedDeclaration: 10,
src: "2648:40:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
nodeType: "BinaryOperation",
operator: "==",
rightExpression: {
argumentTypes: null,
hexValue: "74727565",
id: 132,
isConstant: false,
isLValue: false,
isPure: true,
kind: "bool",
lValueRequested: false,
nodeType: "Literal",
src: "2692:4:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
value: "true"
},
src: "2648:48:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
functionReturnParameters: 127,
id: 134,
nodeType: "Return",
src: "2641:55:0"
}
]
},
documentation: null,
id: 136,
implemented: true,
kind: "function",
modifiers: [ ],
name: "isHashStored",
nodeType: "FunctionDefinition",
parameters: {
id: 124,
nodeType: "ParameterList",
parameters: [
{
constant: false,
id: 123,
name: "_documentHash",
nodeType: "VariableDeclaration",
scope: 136,
src: "2551:21:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
},
typeName: {
id: 122,
name: "bytes32",
nodeType: "ElementaryTypeName",
src: "2551:7:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
value: null,
visibility: "internal"
}
],
src: "2550:23:0"
},
returnParameters: {
id: 127,
nodeType: "ParameterList",
parameters: [
{
constant: false,
id: 126,
name: "",
nodeType: "VariableDeclaration",
scope: 136,
src: "2621:4:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
typeName: {
id: 125,
name: "bool",
nodeType: "ElementaryTypeName",
src: "2621:4:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
value: null,
visibility: "internal"
}
],
src: "2620:6:0"
},
scope: 137,
src: "2529:174:0",
stateMutability: "view",
superFunction: null,
visibility: "internal"
}
],
scope: 138,
src: "118:2588:0"
}
],
src: "40:2667:0"
},
legacyAST: {
absolutePath: "/home/engrsunday/workspace/E-Cert-Dapp/contracts/CertificateRegistry.sol",
exportedSymbols: {
CertificateRegistry: [
137
]
},
id: 138,
nodeType: "SourceUnit",
nodes: [
{
id: 1,
literals: [
"solidity",
">=",
"0.4",
".22",
"<",
"0.8",
".0"
],
nodeType: "PragmaDirective",
src: "40:32:0"
},
{
absolutePath: "/home/engrsunday/workspace/E-Cert-Dapp/contracts/zeppelin/ownership/Ownable.sol",
file: "./zeppelin/ownership/Ownable.sol",
id: 2,
nodeType: "ImportDirective",
scope: 138,
sourceUnit: 288,
src: "74:42:0",
symbolAliases: [ ],
unitAlias: ""
},
{
baseContracts: [
{
arguments: null,
baseName: {
contractScope: null,
id: 3,
name: "Ownable",
nodeType: "UserDefinedTypeName",
referencedDeclaration: 287,
src: "150:7:0",
typeDescriptions: {
typeIdentifier: "t_contract$_Ownable_$287",
typeString: "contract Ownable"
}
},
id: 4,
nodeType: "InheritanceSpecifier",
src: "150:7:0"
}
],
contractDependencies: [
287
],
contractKind: "contract",
documentation: null,
fullyImplemented: true,
id: 137,
linearizedBaseContracts: [
137,
287
],
name: "CertificateRegistry",
nodeType: "ContractDefinition",
nodes: [
{
canonicalName: "CertificateRegistry.DocumentInfo",
id: 11,
members: [
{
constant: false,
id: 6,
name: "issuer",
nodeType: "VariableDeclaration",
scope: 11,
src: "492:14:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_address",
typeString: "address"
},
typeName: {
id: 5,
name: "address",
nodeType: "ElementaryTypeName",
src: "492:7:0",
stateMutability: "nonpayable",
typeDescriptions: {
typeIdentifier: "t_address",
typeString: "address"
}
},
value: null,
visibility: "internal"
},
{
constant: false,
id: 8,
name: "timeOfIssue",
nodeType: "VariableDeclaration",
scope: 11,
src: "516:19:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_uint256",
typeString: "uint256"
},
typeName: {
id: 7,
name: "uint256",
nodeType: "ElementaryTypeName",
src: "516:7:0",
typeDescriptions: {
typeIdentifier: "t_uint256",
typeString: "uint256"
}
},
value: null,
visibility: "internal"
},
{
constant: false,
id: 10,
name: "isStored",
nodeType: "VariableDeclaration",
scope: 11,
src: "545:13:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
typeName: {
id: 9,
name: "bool",
nodeType: "ElementaryTypeName",
src: "545:4:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
value: null,
visibility: "internal"
}
],
name: "DocumentInfo",
nodeType: "StructDefinition",
scope: 137,
src: "462:103:0",
visibility: "public"
},
{
constant: false,
id: 15,
name: "documentRegistry",
nodeType: "VariableDeclaration",
scope: 137,
src: "776:56:0",
stateVariable: true,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_mapping$_t_bytes32_$_t_struct$_DocumentInfo_$11_storage_$",
typeString: "mapping(bytes32 => struct CertificateRegistry.DocumentInfo)"
},
typeName: {
id: 14,
keyType: {
id: 12,
name: "bytes32",
nodeType: "ElementaryTypeName",
src: "784:7:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
nodeType: "Mapping",
src: "776:32:0",
typeDescriptions: {
typeIdentifier: "t_mapping$_t_bytes32_$_t_struct$_DocumentInfo_$11_storage_$",
typeString: "mapping(bytes32 => struct CertificateRegistry.DocumentInfo)"
},
valueType: {
contractScope: null,
id: 13,
name: "DocumentInfo",
nodeType: "UserDefinedTypeName",
referencedDeclaration: 11,
src: "795:12:0",
typeDescriptions: {
typeIdentifier: "t_struct$_DocumentInfo_$11_storage_ptr",
typeString: "struct CertificateRegistry.DocumentInfo"
}
}
},
value: null,
visibility: "public"
},
{
anonymous: false,
documentation: null,
id: 23,
name: "LogNewHashStored",
nodeType: "EventDefinition",
parameters: {
id: 22,
nodeType: "ParameterList",
parameters: [
{
constant: false,
id: 17,
indexed: true,
name: "from",
nodeType: "VariableDeclaration",
scope: 23,
src: "900:20:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_address",
typeString: "address"
},
typeName: {
id: 16,
name: "address",
nodeType: "ElementaryTypeName",
src: "900:7:0",
stateMutability: "nonpayable",
typeDescriptions: {
typeIdentifier: "t_address",
typeString: "address"
}
},
value: null,
visibility: "internal"
},
{
constant: false,
id: 19,
indexed: false,
name: "timeOfIssue",
nodeType: "VariableDeclaration",
scope: 23,
src: "930:16:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_uint256",
typeString: "uint256"
},
typeName: {
id: 18,
name: "uint",
nodeType: "ElementaryTypeName",
src: "930:4:0",
typeDescriptions: {
typeIdentifier: "t_uint256",
typeString: "uint256"
}
},
value: null,
visibility: "internal"
},
{
constant: false,
id: 21,
indexed: false,
name: "isStored",
nodeType: "VariableDeclaration",
scope: 23,
src: "956:13:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
typeName: {
id: 20,
name: "bool",
nodeType: "ElementaryTypeName",
src: "956:4:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
value: null,
visibility: "internal"
}
],
src: "890:85:0"
},
src: "868:108:0"
},
{
body: {
id: 36,
nodeType: "Block",
src: "1028:161:0",
statements: [
{
expression: {
argumentTypes: null,
arguments: [
{
argumentTypes: null,
id: 31,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
nodeType: "UnaryOperation",
operator: "!",
prefix: true,
src: "1059:28:0",
subExpression: {
argumentTypes: null,
arguments: [
{
argumentTypes: null,
id: 29,
name: "_documentHash",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 25,
src: "1073:13:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
}
],
expression: {
argumentTypes: [
{
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
],
id: 28,
name: "isHashStored",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 136,
src: "1060:12:0",
typeDescriptions: {
typeIdentifier: "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
typeString: "function (bytes32) view returns (bool)"
}
},
id: 30,
isConstant: false,
isLValue: false,
isPure: false,
kind: "functionCall",
lValueRequested: false,
names: [ ],
nodeType: "FunctionCall",
src: "1060:27:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
{
argumentTypes: null,
hexValue: "4572726f723a204f6e6c792068617368657320746861742068617665206e6f74206265656e206861736865642063616e2062652073746f726564",
id: 32,
isConstant: false,
isLValue: false,
isPure: true,
kind: "string",
lValueRequested: false,
nodeType: "Literal",
src: "1101:60:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_stringliteral_2fa0893eeeff240a13e463b7e2bd77e95feccab78c12209765b9152b87a75200",
typeString: "literal_string "Error: Only hashes that have not been hashed can be stored""
},
value: "Error: Only hashes that have not been hashed can be stored"
}
],
expression: {
argumentTypes: [
{
typeIdentifier: "t_bool",
typeString: "bool"
},
{
typeIdentifier: "t_stringliteral_2fa0893eeeff240a13e463b7e2bd77e95feccab78c12209765b9152b87a75200",
typeString: "literal_string "Error: Only hashes that have not been hashed can be stored""
}
],
id: 27,
name: "require",
nodeType: "Identifier",
overloadedDeclarations: [
305,
306
],
referencedDeclaration: 306,
src: "1038:7:0",
typeDescriptions: {
typeIdentifier: "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
typeString: "function (bool,string memory) pure"
}
},
id: 33,
isConstant: false,
isLValue: false,
isPure: false,
kind: "functionCall",
lValueRequested: false,
names: [ ],
nodeType: "FunctionCall",
src: "1038:133:0",
typeDescriptions: {
typeIdentifier: "t_tuple$__$",
typeString: "tuple()"
}
},
id: 34,
nodeType: "ExpressionStatement",
src: "1038:133:0"
},
{
id: 35,
nodeType: "PlaceholderStatement",
src: "1181:1:0"
}
]
},
documentation: null,
id: 37,
name: "onlyNotHashed",
nodeType: "ModifierDefinition",
parameters: {
id: 26,
nodeType: "ParameterList",
parameters: [
{
constant: false,
id: 25,
name: "_documentHash",
nodeType: "VariableDeclaration",
scope: 37,
src: "1005:21:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
},
typeName: {
id: 24,
name: "bytes32",
nodeType: "ElementaryTypeName",
src: "1005:7:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
value: null,
visibility: "internal"
}
],
src: "1004:23:0"
},
src: "982:207:0",
visibility: "internal"
},
{
body: {
id: 50,
nodeType: "Block",
src: "1249:143:0",
statements: [
{
expression: {
argumentTypes: null,
arguments: [
{
argumentTypes: null,
commonType: {
typeIdentifier: "t_uint8",
typeString: "uint8"
},
id: 45,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
leftExpression: {
argumentTypes: null,
expression: {
argumentTypes: null,
id: 42,
name: "_documentHash",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 39,
src: "1280:13:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
id: 43,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
memberName: "length",
nodeType: "MemberAccess",
referencedDeclaration: null,
src: "1280:20:0",
typeDescriptions: {
typeIdentifier: "t_uint8",
typeString: "uint8"
}
},
nodeType: "BinaryOperation",
operator: ">",
rightExpression: {
argumentTypes: null,
hexValue: "30",
id: 44,
isConstant: false,
isLValue: false,
isPure: true,
kind: "number",
lValueRequested: false,
nodeType: "Literal",
src: "1303:1:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_rational_0_by_1",
typeString: "int_const 0"
},
value: "0"
},
src: "1280:24:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
{
argumentTypes: null,
hexValue: "4572726f723a204572726f723a20686173682076616c75652073686f756c64206e6f7420626520656d707479",
id: 46,
isConstant: false,
isLValue: false,
isPure: true,
kind: "string",
lValueRequested: false,
nodeType: "Literal",
src: "1318:46:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_stringliteral_1e091e5f2bd48e158be5924ffb956d6758c9f1d0fe5ef6ffd4bb48d5d30a01c4",
typeString: "literal_string "Error: Error: hash value should not be empty""
},
value: "Error: Error: hash value should not be empty"
}
],
expression: {
argumentTypes: [
{
typeIdentifier: "t_bool",
typeString: "bool"
},
{
typeIdentifier: "t_stringliteral_1e091e5f2bd48e158be5924ffb956d6758c9f1d0fe5ef6ffd4bb48d5d30a01c4",
typeString: "literal_string "Error: Error: hash value should not be empty""
}
],
id: 41,
name: "require",
nodeType: "Identifier",
overloadedDeclarations: [
305,
306
],
referencedDeclaration: 306,
src: "1259:7:0",
typeDescriptions: {
typeIdentifier: "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
typeString: "function (bool,string memory) pure"
}
},
id: 47,
isConstant: false,
isLValue: false,
isPure: false,
kind: "functionCall",
lValueRequested: false,
names: [ ],
nodeType: "FunctionCall",
src: "1259:115:0",
typeDescriptions: {
typeIdentifier: "t_tuple$__$",
typeString: "tuple()"
}
},
id: 48,
nodeType: "ExpressionStatement",
src: "1259:115:0"
},
{
id: 49,
nodeType: "PlaceholderStatement",
src: "1384:1:0"
}
]
},
documentation: null,
id: 51,
name: "onlyHashValueNotEmpty",
nodeType: "ModifierDefinition",
parameters: {
id: 40,
nodeType: "ParameterList",
parameters: [
{
constant: false,
id: 39,
name: "_documentHash",
nodeType: "VariableDeclaration",
scope: 51,
src: "1226:21:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
},
typeName: {
id: 38,
name: "bytes32",
nodeType: "ElementaryTypeName",
src: "1226:7:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
value: null,
visibility: "internal"
}
],
src: "1225:23:0"
},
src: "1195:197:0",
visibility: "internal"
},
{
body: {
id: 98,
nodeType: "Block",
src: "1777:500:0",
statements: [
{
expression: {
argumentTypes: null,
arguments: [
{
argumentTypes: null,
commonType: {
typeIdentifier: "t_address_payable",
typeString: "address payable"
},
id: 70,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
leftExpression: {
argumentTypes: null,
expression: {
argumentTypes: null,
id: 65,
name: "msg",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 302,
src: "1808:3:0",
typeDescriptions: {
typeIdentifier: "t_magic_message",
typeString: "msg"
}
},
id: 66,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
memberName: "sender",
nodeType: "MemberAccess",
referencedDeclaration: null,
src: "1808:10:0",
typeDescriptions: {
typeIdentifier: "t_address_payable",
typeString: "address payable"
}
},
nodeType: "BinaryOperation",
operator: "!=",
rightExpression: {
argumentTypes: null,
arguments: [
{
argumentTypes: null,
hexValue: "307830",
id: 68,
isConstant: false,
isLValue: false,
isPure: true,
kind: "number",
lValueRequested: false,
nodeType: "Literal",
src: "1830:3:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_rational_0_by_1",
typeString: "int_const 0"
},
value: "0x0"
}
],
expression: {
argumentTypes: [
{
typeIdentifier: "t_rational_0_by_1",
typeString: "int_const 0"
}
],
id: 67,
isConstant: false,
isLValue: false,
isPure: true,
lValueRequested: false,
nodeType: "ElementaryTypeNameExpression",
src: "1822:7:0",
typeDescriptions: {
typeIdentifier: "t_type$_t_address_$",
typeString: "type(address)"
},
typeName: "address"
},
id: 69,
isConstant: false,
isLValue: false,
isPure: true,
kind: "typeConversion",
lValueRequested: false,
names: [ ],
nodeType: "FunctionCall",
src: "1822:12:0",
typeDescriptions: {
typeIdentifier: "t_address_payable",
typeString: "address payable"
}
},
src: "1808:26:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
{
argumentTypes: null,
hexValue: "4572726f723a20656e73757265206564756361746f722061646472657373206578697374",
id: 71,
isConstant: false,
isLValue: false,
isPure: true,
kind: "string",
lValueRequested: false,
nodeType: "Literal",
src: "1848:38:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_stringliteral_a09720bdcf207a60f01eceb97a7f2f206fcb22bdcd56a7b06fd6bc8ddfa8d0fe",
typeString: "literal_string "Error: ensure educator address exist""
},
value: "Error: ensure educator address exist"
}
],
expression: {
argumentTypes: [
{
typeIdentifier: "t_bool",
typeString: "bool"
},
{
typeIdentifier: "t_stringliteral_a09720bdcf207a60f01eceb97a7f2f206fcb22bdcd56a7b06fd6bc8ddfa8d0fe",
typeString: "literal_string "Error: ensure educator address exist""
}
],
id: 64,
name: "require",
nodeType: "Identifier",
overloadedDeclarations: [
305,
306
],
referencedDeclaration: 306,
src: "1787:7:0",
typeDescriptions: {
typeIdentifier: "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
typeString: "function (bool,string memory) pure"
}
},
id: 72,
isConstant: false,
isLValue: false,
isPure: false,
kind: "functionCall",
lValueRequested: false,
names: [ ],
nodeType: "FunctionCall",
src: "1787:109:0",
typeDescriptions: {
typeIdentifier: "t_tuple$__$",
typeString: "tuple()"
}
},
id: 73,
nodeType: "ExpressionStatement",
src: "1787:109:0"
},
{
assignments: [
75
],
declarations: [
{
constant: false,
id: 75,
name: "docInfo",
nodeType: "VariableDeclaration",
scope: 98,
src: "1906:27:0",
stateVariable: false,
storageLocation: "memory",
typeDescriptions: {
typeIdentifier: "t_struct$_DocumentInfo_$11_memory_ptr",
typeString: "struct CertificateRegistry.DocumentInfo"
},
typeName: {
contractScope: null,
id: 74,
name: "DocumentInfo",
nodeType: "UserDefinedTypeName",
referencedDeclaration: 11,
src: "1906:12:0",
typeDescriptions: {
typeIdentifier: "t_struct$_DocumentInfo_$11_storage_ptr",
typeString: "struct CertificateRegistry.DocumentInfo"
}
},
value: null,
visibility: "internal"
}
],
id: 83,
initialValue: {
argumentTypes: null,
arguments: [
{
argumentTypes: null,
expression: {
argumentTypes: null,
id: 77,
name: "msg",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 302,
src: "1971:3:0",
typeDescriptions: {
typeIdentifier: "t_magic_message",
typeString: "msg"
}
},
id: 78,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
memberName: "sender",
nodeType: "MemberAccess",
referencedDeclaration: null,
src: "1971:10:0",
typeDescriptions: {
typeIdentifier: "t_address_payable",
typeString: "address payable"
}
},
{
argumentTypes: null,
expression: {
argumentTypes: null,
id: 79,
name: "block",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 292,
src: "2008:5:0",
typeDescriptions: {
typeIdentifier: "t_magic_block",
typeString: "block"
}
},
id: 80,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
memberName: "timestamp",
nodeType: "MemberAccess",
referencedDeclaration: null,
src: "2008:15:0",
typeDescriptions: {
typeIdentifier: "t_uint256",
typeString: "uint256"
}
},
{
argumentTypes: null,
hexValue: "74727565",
id: 81,
isConstant: false,
isLValue: false,
isPure: true,
kind: "bool",
lValueRequested: false,
nodeType: "Literal",
src: "2047:4:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
value: "true"
}
],
expression: {
argumentTypes: [
{
typeIdentifier: "t_address_payable",
typeString: "address payable"
},
{
typeIdentifier: "t_uint256",
typeString: "uint256"
},
{
typeIdentifier: "t_bool",
typeString: "bool"
}
],
id: 76,
name: "DocumentInfo",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 11,
src: "1936:12:0",
typeDescriptions: {
typeIdentifier: "t_type$_t_struct$_DocumentInfo_$11_storage_ptr_$",
typeString: "type(struct CertificateRegistry.DocumentInfo storage pointer)"
}
},
id: 82,
isConstant: false,
isLValue: false,
isPure: false,
kind: "structConstructorCall",
lValueRequested: false,
names: [
"issuer",
"timeOfIssue",
"isStored"
],
nodeType: "FunctionCall",
src: "1936:126:0",
typeDescriptions: {
typeIdentifier: "t_struct$_DocumentInfo_$11_memory",
typeString: "struct CertificateRegistry.DocumentInfo memory"
}
},
nodeType: "VariableDeclarationStatement",
src: "1906:156:0"
},
{
expression: {
argumentTypes: null,
id: 88,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
leftHandSide: {
argumentTypes: null,
baseExpression: {
argumentTypes: null,
id: 84,
name: "documentRegistry",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 15,
src: "2073:16:0",
typeDescriptions: {
typeIdentifier: "t_mapping$_t_bytes32_$_t_struct$_DocumentInfo_$11_storage_$",
typeString: "mapping(bytes32 => struct CertificateRegistry.DocumentInfo storage ref)"
}
},
id: 86,
indexExpression: {
argumentTypes: null,
id: 85,
name: "_documentHash",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 53,
src: "2090:13:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
isConstant: false,
isLValue: true,
isPure: false,
lValueRequested: true,
nodeType: "IndexAccess",
src: "2073:31:0",
typeDescriptions: {
typeIdentifier: "t_struct$_DocumentInfo_$11_storage",
typeString: "struct CertificateRegistry.DocumentInfo storage ref"
}
},
nodeType: "Assignment",
operator: "=",
rightHandSide: {
argumentTypes: null,
id: 87,
name: "docInfo",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 75,
src: "2107:7:0",
typeDescriptions: {
typeIdentifier: "t_struct$_DocumentInfo_$11_memory_ptr",
typeString: "struct CertificateRegistry.DocumentInfo memory"
}
},
src: "2073:41:0",
typeDescriptions: {
typeIdentifier: "t_struct$_DocumentInfo_$11_storage",
typeString: "struct CertificateRegistry.DocumentInfo storage ref"
}
},
id: 89,
nodeType: "ExpressionStatement",
src: "2073:41:0"
},
{
eventCall: {
argumentTypes: null,
arguments: [
{
argumentTypes: null,
expression: {
argumentTypes: null,
id: 91,
name: "msg",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 302,
src: "2236:3:0",
typeDescriptions: {
typeIdentifier: "t_magic_message",
typeString: "msg"
}
},
id: 92,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
memberName: "sender",
nodeType: "MemberAccess",
referencedDeclaration: null,
src: "2236:10:0",
typeDescriptions: {
typeIdentifier: "t_address_payable",
typeString: "address payable"
}
},
{
argumentTypes: null,
expression: {
argumentTypes: null,
id: 93,
name: "block",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 292,
src: "2248:5:0",
typeDescriptions: {
typeIdentifier: "t_magic_block",
typeString: "block"
}
},
id: 94,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
memberName: "timestamp",
nodeType: "MemberAccess",
referencedDeclaration: null,
src: "2248:15:0",
typeDescriptions: {
typeIdentifier: "t_uint256",
typeString: "uint256"
}
},
{
argumentTypes: null,
hexValue: "74727565",
id: 95,
isConstant: false,
isLValue: false,
isPure: true,
kind: "bool",
lValueRequested: false,
nodeType: "Literal",
src: "2265:4:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
value: "true"
}
],
expression: {
argumentTypes: [
{
typeIdentifier: "t_address_payable",
typeString: "address payable"
},
{
typeIdentifier: "t_uint256",
typeString: "uint256"
},
{
typeIdentifier: "t_bool",
typeString: "bool"
}
],
id: 90,
name: "LogNewHashStored",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 23,
src: "2219:16:0",
typeDescriptions: {
typeIdentifier: "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
typeString: "function (address,uint256,bool)"
}
},
id: 96,
isConstant: false,
isLValue: false,
isPure: false,
kind: "functionCall",
lValueRequested: false,
names: [ ],
nodeType: "FunctionCall",
src: "2219:51:0",
typeDescriptions: {
typeIdentifier: "t_tuple$__$",
typeString: "tuple()"
}
},
id: 97,
nodeType: "EmitStatement",
src: "2214:56:0"
}
]
},
documentation: null,
id: 99,
implemented: true,
kind: "function",
modifiers: [
{
arguments: null,
id: 56,
modifierName: {
argumentTypes: null,
id: 55,
name: "onlyOwner",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 218,
src: "1681:9:0",
typeDescriptions: {
typeIdentifier: "t_modifier$__$",
typeString: "modifier ()"
}
},
nodeType: "ModifierInvocation",
src: "1681:9:0"
},
{
arguments: [
{
argumentTypes: null,
id: 58,
name: "_documentHash",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 53,
src: "1721:13:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
}
],
id: 59,
modifierName: {
argumentTypes: null,
id: 57,
name: "onlyHashValueNotEmpty",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 51,
src: "1699:21:0",
typeDescriptions: {
typeIdentifier: "t_modifier$_t_bytes32_$",
typeString: "modifier (bytes32)"
}
},
nodeType: "ModifierInvocation",
src: "1699:36:0"
},
{
arguments: [
{
argumentTypes: null,
id: 61,
name: "_documentHash",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 53,
src: "1758:13:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
}
],
id: 62,
modifierName: {
argumentTypes: null,
id: 60,
name: "onlyNotHashed",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 37,
src: "1744:13:0",
typeDescriptions: {
typeIdentifier: "t_modifier$_t_bytes32_$",
typeString: "modifier (bytes32)"
}
},
nodeType: "ModifierInvocation",
src: "1744:28:0"
}
],
name: "storeHash",
nodeType: "FunctionDefinition",
parameters: {
id: 54,
nodeType: "ParameterList",
parameters: [
{
constant: false,
id: 53,
name: "_documentHash",
nodeType: "VariableDeclaration",
scope: 99,
src: "1635:21:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
},
typeName: {
id: 52,
name: "bytes32",
nodeType: "ElementaryTypeName",
src: "1635:7:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
value: null,
visibility: "internal"
}
],
src: "1634:23:0"
},
returnParameters: {
id: 63,
nodeType: "ParameterList",
parameters: [ ],
src: "1777:0:0"
},
scope: 137,
src: "1616:661:0",
stateMutability: "nonpayable",
superFunction: null,
visibility: "public"
},
{
body: {
id: 120,
nodeType: "Block",
src: "2390:133:0",
statements: [
{
assignments: [
107
],
declarations: [
{
constant: false,
id: 107,
name: "valid",
nodeType: "VariableDeclaration",
scope: 120,
src: "2400:10:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
typeName: {
id: 106,
name: "bool",
nodeType: "ElementaryTypeName",
src: "2400:4:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
value: null,
visibility: "internal"
}
],
id: 112,
initialValue: {
argumentTypes: null,
commonType: {
typeIdentifier: "t_uint8",
typeString: "uint8"
},
id: 111,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
leftExpression: {
argumentTypes: null,
expression: {
argumentTypes: null,
id: 108,
name: "_documenteHash",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 101,
src: "2413:14:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
id: 109,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
memberName: "length",
nodeType: "MemberAccess",
referencedDeclaration: null,
src: "2413:21:0",
typeDescriptions: {
typeIdentifier: "t_uint8",
typeString: "uint8"
}
},
nodeType: "BinaryOperation",
operator: ">",
rightExpression: {
argumentTypes: null,
hexValue: "30",
id: 110,
isConstant: false,
isLValue: false,
isPure: true,
kind: "number",
lValueRequested: false,
nodeType: "Literal",
src: "2437:1:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_rational_0_by_1",
typeString: "int_const 0"
},
value: "0"
},
src: "2413:25:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
nodeType: "VariableDeclarationStatement",
src: "2400:38:0"
},
{
condition: {
argumentTypes: null,
id: 113,
name: "valid",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 107,
src: "2452:5:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
falseBody: null,
id: 117,
nodeType: "IfStatement",
src: "2448:47:0",
trueBody: {
id: 116,
nodeType: "Block",
src: "2459:36:0",
statements: [
{
expression: {
argumentTypes: null,
hexValue: "74727565",
id: 114,
isConstant: false,
isLValue: false,
isPure: true,
kind: "bool",
lValueRequested: false,
nodeType: "Literal",
src: "2480:4:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
value: "true"
},
functionReturnParameters: 105,
id: 115,
nodeType: "Return",
src: "2473:11:0"
}
]
}
},
{
expression: {
argumentTypes: null,
hexValue: "66616c7365",
id: 118,
isConstant: false,
isLValue: false,
isPure: true,
kind: "bool",
lValueRequested: false,
nodeType: "Literal",
src: "2511:5:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
value: "false"
},
functionReturnParameters: 105,
id: 119,
nodeType: "Return",
src: "2504:12:0"
}
]
},
documentation: null,
id: 121,
implemented: true,
kind: "function",
modifiers: [ ],
name: "verifyCertificate",
nodeType: "FunctionDefinition",
parameters: {
id: 102,
nodeType: "ParameterList",
parameters: [
{
constant: false,
id: 101,
name: "_documenteHash",
nodeType: "VariableDeclaration",
scope: 121,
src: "2311:22:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
},
typeName: {
id: 100,
name: "bytes32",
nodeType: "ElementaryTypeName",
src: "2311:7:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
value: null,
visibility: "internal"
}
],
src: "2310:24:0"
},
returnParameters: {
id: 105,
nodeType: "ParameterList",
parameters: [
{
constant: false,
id: 104,
name: "",
nodeType: "VariableDeclaration",
scope: 121,
src: "2380:4:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
typeName: {
id: 103,
name: "bool",
nodeType: "ElementaryTypeName",
src: "2380:4:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
value: null,
visibility: "internal"
}
],
src: "2379:6:0"
},
scope: 137,
src: "2284:239:0",
stateMutability: "pure",
superFunction: null,
visibility: "public"
},
{
body: {
id: 135,
nodeType: "Block",
src: "2631:72:0",
statements: [
{
expression: {
argumentTypes: null,
commonType: {
typeIdentifier: "t_bool",
typeString: "bool"
},
id: 133,
isConstant: false,
isLValue: false,
isPure: false,
lValueRequested: false,
leftExpression: {
argumentTypes: null,
expression: {
argumentTypes: null,
baseExpression: {
argumentTypes: null,
id: 128,
name: "documentRegistry",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 15,
src: "2648:16:0",
typeDescriptions: {
typeIdentifier: "t_mapping$_t_bytes32_$_t_struct$_DocumentInfo_$11_storage_$",
typeString: "mapping(bytes32 => struct CertificateRegistry.DocumentInfo storage ref)"
}
},
id: 130,
indexExpression: {
argumentTypes: null,
id: 129,
name: "_documentHash",
nodeType: "Identifier",
overloadedDeclarations: [ ],
referencedDeclaration: 123,
src: "2665:13:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
isConstant: false,
isLValue: true,
isPure: false,
lValueRequested: false,
nodeType: "IndexAccess",
src: "2648:31:0",
typeDescriptions: {
typeIdentifier: "t_struct$_DocumentInfo_$11_storage",
typeString: "struct CertificateRegistry.DocumentInfo storage ref"
}
},
id: 131,
isConstant: false,
isLValue: true,
isPure: false,
lValueRequested: false,
memberName: "isStored",
nodeType: "MemberAccess",
referencedDeclaration: 10,
src: "2648:40:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
nodeType: "BinaryOperation",
operator: "==",
rightExpression: {
argumentTypes: null,
hexValue: "74727565",
id: 132,
isConstant: false,
isLValue: false,
isPure: true,
kind: "bool",
lValueRequested: false,
nodeType: "Literal",
src: "2692:4:0",
subdenomination: null,
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
value: "true"
},
src: "2648:48:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
functionReturnParameters: 127,
id: 134,
nodeType: "Return",
src: "2641:55:0"
}
]
},
documentation: null,
id: 136,
implemented: true,
kind: "function",
modifiers: [ ],
name: "isHashStored",
nodeType: "FunctionDefinition",
parameters: {
id: 124,
nodeType: "ParameterList",
parameters: [
{
constant: false,
id: 123,
name: "_documentHash",
nodeType: "VariableDeclaration",
scope: 136,
src: "2551:21:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
},
typeName: {
id: 122,
name: "bytes32",
nodeType: "ElementaryTypeName",
src: "2551:7:0",
typeDescriptions: {
typeIdentifier: "t_bytes32",
typeString: "bytes32"
}
},
value: null,
visibility: "internal"
}
],
src: "2550:23:0"
},
returnParameters: {
id: 127,
nodeType: "ParameterList",
parameters: [
{
constant: false,
id: 126,
name: "",
nodeType: "VariableDeclaration",
scope: 136,
src: "2621:4:0",
stateVariable: false,
storageLocation: "default",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
},
typeName: {
id: 125,
name: "bool",
nodeType: "ElementaryTypeName",
src: "2621:4:0",
typeDescriptions: {
typeIdentifier: "t_bool",
typeString: "bool"
}
},
value: null,
visibility: "internal"
}
],
src: "2620:6:0"
},
scope: 137,
src: "2529:174:0",
stateMutability: "view",
superFunction: null,
visibility: "internal"
}
],
scope: 138,
src: "118:2588:0"
}
],
src: "40:2667:0"
},
compiler: {
name: "solc",
version: "0.5.16+commit.9c3226ce.Emscripten.clang"
},
networks: {
5777: {
events: {
0x77ce6f493ec8c515e47fd7a83a30370b8e5a973878bcd02456bbe359358de0cc: {
anonymous: false,
inputs: [
{
indexed: true,
internalType: "address",
name: "from",
type: "address"
},
{
indexed: false,
internalType: "uint256",
name: "timeOfIssue",
type: "uint256"
},
{
indexed: false,
internalType: "bool",
name: "isStored",
type: "bool"
}
],
name: "LogNewHashStored",
type: "event"
},
0x342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735: {
anonymous: false,
inputs: [
{
indexed: true,
internalType: "address",
name: "oldOwner",
type: "address"
},
{
indexed: true,
internalType: "address",
name: "newOwner",
type: "address"
}
],
name: "OwnerSet",
type: "event"
},
0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0: {
anonymous: false,
inputs: [
{
indexed: true,
internalType: "address",
name: "previousOwner",
type: "address"
},
{
indexed: true,
internalType: "address",
name: "newOwner",
type: "address"
}
],
name: "OwnershipTransferred",
type: "event"
}
},
links: { },
address: "0xA7464b0bB4d6b8Dc64bD1126EbDB780eF37722e1",
transactionHash: "0x872707058892098f295a06c3347b9fc1ace3eadf44dd96802e806bb374e09532"
}
},
schemaVersion: "3.3.1",
updatedAt: "2020-12-11T09:53:04.159Z",
networkType: "ethereum",
devdoc: {
methods: { }
},
userdoc: {
methods: { }
}
}